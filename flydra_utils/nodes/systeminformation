#!/usr/bin/env python
# -*- Mode: python; tab-width: 4; indent-tabs-mode: nil; indent-offset: 4 -*-

import roslib; roslib.load_manifest('flydra_utils')

import time
import psutil

import rospy
from flydra_utils.msg import SystemInformation

def get_system_information(interval=1.0):
    pub = rospy.Publisher('system_information', SystemInformation)

    last = psutil.network_io_counters(pernic=True)
    while not rospy.is_shutdown():
        msg = SystemInformation()
        msg.cpu_usage = psutil.cpu_percent(percpu=True)
        msg.phymem_usage = psutil.phymem_usage().percent
        msg.disk_usage = psutil.disk_usage('/').percent

        this = psutil.network_io_counters(pernic=True)
        send_bw = []
        recv_bw = []
        for iface in sorted(this):
            if iface == 'lo':
                continue

            send_bw.append(
                (this[iface].bytes_sent - last[iface].bytes_sent) / interval)
            recv_bw.append(
                (this[iface].bytes_recv - last[iface].bytes_recv) / interval)

        msg.network_send_bw = send_bw
        msg.network_recv_bw = recv_bw
        pub.publish(msg)

        rospy.sleep(interval)

if __name__ == "__main__":
    rospy.init_node('systeminfo')
    try:
        get_system_information(2.0)
    except rospy.ROSInterruptException:
        pass

